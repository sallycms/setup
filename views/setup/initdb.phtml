<?php
/*
 * Copyright (c) 2012, webvariants GbR, http://www.webvariants.de
 *
 * This file is released under the terms of the MIT license. You can find the
 * complete text in the attached LICENSE file or online at:
 *
 * http://www.opensource.org/licenses/mit-license.php
 */

print $this->render('layout/navigation.phtml', array('enabled' => $enabled, 'active' => 'initdb'));

$first = reset($actions);

?>
<form class="form-horizontal" action="<?php print $_router->getUrl('database') ?>" method="post">
	<fieldset>
		<legend><?php print t('init_database') ?></legend>
		<p><?php print t('init_database_help') ?></p>

		<div class="span10 pull-right">
			<?php foreach ($actions as $action): ?>
			<label class="radio"><input type="radio" name="dbAction" value="<?php print $action ?>"<?php print $action === $first ? ' checked="checked" autofocus="autofocus"' : '' ?> /> <?php print t('db_action_'.$action) ?></label>
			<?php endforeach ?>
		</div>
	</fieldset>

	<fieldset>
		<legend><?php print t('create_admin') ?></legend>
		<p><?php print t('create_admin_help') ?></p>

		<div class="control-group">
			<label class="control-label" for="username"><?php print t('username_and_password') ?>:</label>
			<div class="controls controls-row">
				<input type="text" name="username" id="username" placeholder="admin" class="span3" required="required" />

				<div class="input-append span3">
					<input type="text" name="password" id="password" placeholder="mypassword" required="required" />
					<button class="btn" type="button" id="gen_password"><i class="icon-repeat"></i> <?php print t('generate') ?></button>
				</div>
			</div>
		</div>

		<?php if ($userExists): ?>
		<div class="control-group">
			<div class="controls span5">
				<label class="checkbox">
					<input type="checkbox" name="no_user" id="no_user" value="1" /> <?php print t('dont_create_user') ?>
				</label>
			</div>
		</div>
		<?php endif ?>

		<?php print sly_Util_Setup::renderFlashMessage() ?>

		<div class="form-actions">
			<button type="submit" class="btn btn-primary"><?php print t('finish_setup') ?></button>
		</div>
	</fieldset>
</form>

<script type="text/javascript">
jQuery(function($) {
	$('#no_user').on('change', function() {
		$('#username,#password,#gen_password').prop('disabled', this.checked);
	});
	$('input[name="dbAction"]').on('change', function() {
		var requireUser = $(this).val() !== 'nop';

		$('#no_user').prop('disabled', requireUser);
		$('#no_user').parent().toggleClass('muted', requireUser);

		if (requireUser) {
			$('#no_user').prop('checked', false).trigger('change');
		}
	});

	$('input[name="dbAction"]:checked').trigger('change');

	$('#gen_password').on('click', function() {
		var
			letter    = /[a-zA-Z]$/,
			vowel     = /[aeiouAEIOU]$/,
			consonant = /[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/,
			password  = function(length, memorable, pattern, prefix) {
				var char, n;

				if (length == null) {
					length = 10;
				}

				if (memorable == null) {
					memorable = true;
				}

				if (pattern == null) {
					pattern = /\w/;
				}

				if (prefix == null) {
					prefix = '';
				}

				if (prefix.length >= length) {
					return prefix;
				}

				if (memorable) {
					if (prefix.match(consonant)) {
						pattern = vowel;
					}
					else {
						pattern = consonant;
					}
				}

				n    = (Math.floor(Math.random() * 100) % 94) + 33;
				char = String.fromCharCode(n);

				if (memorable) {
					char = char.toLowerCase();
				}

				if (!char.match(pattern)) {
					return password(length, memorable, pattern, prefix);
				}

				return password(length, memorable, pattern, "" + prefix + char);
			};

		$('#password').val(password(15, false)).trigger('keyup');
	});

	$('#password').on('keyup', function() {
		var
			password = $(this).val(),
			meter    = new wv.PasswordStrength(),
			score    = meter.classify(password);

		$(this).parent()
			.removeClass('st-unknown st-very-weak st-weak st-fair st-strong st-very-strong')
			.addClass('st-' + meter.getClassName(score))
		;
	});
});
</script>
